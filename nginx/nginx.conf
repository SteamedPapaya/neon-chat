# Nginx 설정 파일
events {
    worker_connections 4096;  # worker당 최대 연결 수 설정
}

# http 블록 내에 upstream을 정의합니다.
http {
    upstream spring_backend {  # 업스트림 서버 설정: 세 개의 스프링 서버로 트래픽을 분배
        server spring-server1:8080;
        server spring-server2:8080;
#         server spring-server3:8080;
#         server spring-server4:8080;
#         server spring-server5:8080;
#         server spring-server6:8080;
#         server spring-server7:8080;
#         server spring-server8:8080;
#         server spring-server9:8080;
    }

    server {  # Nginx 서버 설정
        listen 80;  # 80번 포트에서 HTTP 트래픽을 수신

        location / {
            proxy_pass http://spring_backend;  # 업스트림 서버로 요청 전달
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

            location /chat {
                proxy_pass http://spring_backend;  # WebSocket 서버 주소로 프록시
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
    }

    server {
        listen 9999;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow all;  # 상태 페이지에 접근할 수 있는 IP 설정
        }
    }

    log_format custom_format '$remote_addr - $remote_user [$time_local] "$request" '
                             '$status $body_bytes_sent "$http_referer" '
                             '"$http_user_agent" "$upstream_addr"';

    access_log /var/log/nginx/access.log custom_format;
}